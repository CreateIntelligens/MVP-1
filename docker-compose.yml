services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "8884:8884"
      # - "443:443" # HTTPS (optional)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
      # - ./nginx/ssl:/etc/nginx/ssl:ro  # SSL certificates (optional)
    depends_on:
      - api
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

  # API service
  api:
    build: .
    expose:
      - "8000"  # 只對內部網路開放
    volumes:
      - .:/app
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONUNBUFFERED=1
    command: python backend/api_server.py
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

  # Web frontend (HTML + JavaScript)
  web:
    build: .
    expose:
      - "3000" # 只對內部網路開放
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
    command: python -m http.server 3000 --directory /app/web
    depends_on:
      - api
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge